# main.py
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è –Ω–∞ Airbnb —Å –ò–ò –∞–≥–µ–Ω—Ç–æ–º
"""

from airbnb_client import AirbnbMCPClient
from formatter import AirbnbFormatter
from listing_analyzer import ListingAnalyzer
from ai_agent import AirbnbAIAgent
from config import EMOJIS, MESSAGES


def demo_ai_search():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ò–ò –∞–≥–µ–Ω—Ç–æ–º"""
    client = AirbnbMCPClient()
    formatter = AirbnbFormatter()
    ai_agent = AirbnbAIAgent()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        if not client.start_server():
            return
        
        print("\n" + "="*70)
        print(f"{MESSAGES['ai_demo_start']}")
        print("="*70)
        
        # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        test_requests = [
            "–ú–Ω–µ –Ω—É–∂–Ω–æ –∂–∏–ª—å–µ –≤ –ö–∏–µ–≤–µ –Ω–∞ –Ω–µ–¥–µ–ª—é –≤ –∏—é–ª–µ –¥–ª—è –¥–≤–æ–∏—Ö",
            "–•–æ—á—É –≤ –ù—å—é-–ô–æ—Ä–∫ –¥–µ—à–µ–≤–æ, –º–∞–∫—Å–∏–º—É–º 50 –¥–æ–ª–ª–∞—Ä–æ–≤ –∑–∞ –Ω–æ—á—å, —è —Å —Å–æ–±–∞–∫–æ–π",
            "–ü–æ–µ–∑–¥–∫–∞ –≤ –ü–∞—Ä–∏–∂ —Å 15 –∞–≤–≥—É—Å—Ç–∞ –ø–æ 20 –∞–≤–≥—É—Å—Ç–∞ –¥–ª—è —Å–µ–º—å–∏ —Å –¥–≤—É–º—è –¥–µ—Ç—å–º–∏",
            "–ù–∞–π–¥–∏ —á—Ç–æ-—Ç–æ –≤ –õ–æ–Ω–¥–æ–Ω–µ –Ω–µ –¥–æ—Ä–æ–∂–µ 100$ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ"
        ]
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
        for i, user_request in enumerate(test_requests, 1):
            print(f"\n{EMOJIS['user']} –¢–ï–°–¢ {i}: {user_request}")
            print("-" * 70)
            
            # –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫
            listings = ai_agent.search_with_ai(user_request, client, formatter)
            
            if i < len(test_requests):  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
                input(f"\n{EMOJIS['brain']} –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ—Å—Ç–∞...")
        
        print(f"\n{EMOJIS['finish']} –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.stop_server()


def interactive_search():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å –≤–≤–æ–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    client = AirbnbMCPClient()
    formatter = AirbnbFormatter()
    ai_agent = AirbnbAIAgent()
    analyzer = ListingAnalyzer()
    
    try:
        if not client.start_server():
            return
        
        print("\n" + "="*60)
        print("üéØ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –ü–û–ò–°–ö –ñ–ò–õ–¨–Ø –° –ò–ò")
        print("="*60)
        print("–û–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞ –æ–±—ã—á–Ω–æ–º —è–∑—ã–∫–µ!")
        print("–ü—Ä–∏–º–µ—Ä—ã: '–ö–∏–µ–≤ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–ª—è –¥–≤–æ–∏—Ö', '–õ–æ–Ω–¥–æ–Ω –¥–µ—à–µ–≤–æ —Å —Å–æ–±–∞–∫–æ–π'")
        print("–í–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
        
        while True:
            print(f"\n{EMOJIS['user']} ", end="")
            user_request = input("–í–∞—à –∑–∞–ø—Ä–æ—Å: ").strip()
            
            if user_request.lower() in ['–≤—ã—Ö–æ–¥', 'quit', 'exit', '']:
                break
            
            print("-" * 60)
            listings = ai_agent.search_with_ai(user_request, client, formatter)
            
            if listings:
                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                print(f"\n{EMOJIS['question']} –•–æ—Ç–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ò–ò –∞–Ω–∞–ª–∏–∑ –∫–∞–∫–æ–≥–æ-—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞? (y/n): ", end="")
                choice = input().strip().lower()
                
                if choice in ['y', 'yes', '–¥–∞', '–¥']:
                    result = analyzer.analyze_listing_full_cycle(listings, client, user_request)
                    
                    if result == 'exit':
                        break
                    elif result == 'new_search':
                        continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞
            
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.stop_server()

def demo_listing_analysis():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∂–∏–ª—å—è"""
    client = AirbnbMCPClient()
    formatter = AirbnbFormatter()
    ai_agent = AirbnbAIAgent()
    analyzer = ListingAnalyzer()
    
    try:
        if not client.start_server():
            return
        
        print("\n" + "="*70)
        print("üß† –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –î–ï–¢–ê–õ–¨–ù–û–ì–û –ò–ò –ê–ù–ê–õ–ò–ó–ê –ñ–ò–õ–¨–Ø")
        print("="*70)
        
        # –í—ã–ø–æ–ª–Ω–∏–º –ø–æ–∏—Å–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        demo_request = "–ö–∏–µ–≤ –≤ —Ü–µ–Ω—Ç—Ä–µ –¥–ª—è –¥–≤–æ–∏—Ö –Ω–µ –¥–æ—Ä–æ–∂–µ 80$ –∑–∞ –Ω–æ—á—å"
        print(f"üîç –ò—â–µ–º –∂–∏–ª—å–µ: {demo_request}")
        print("-" * 60)
        
        listings = ai_agent.search_with_ai(demo_request, client, formatter)
        
        if listings:
            print(f"\n{EMOJIS['brain']} –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–µ–º –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:")
            result = analyzer.analyze_listing_full_cycle(listings, client, demo_request)
            
            if result == 'exit':
                print(f"{EMOJIS['finish']} –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            elif result == 'new_search':
                print(f"{EMOJIS['search']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫")
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∂–∏–ª—å—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.stop_server()


def old_demo():
    """–°—Ç–∞—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)"""
    client = AirbnbMCPClient()
    formatter = AirbnbFormatter()
    
    try:
        if not client.start_server():
            return
        
        print("\n" + "="*60)
        print("üìä –°–¢–ê–†–´–ô –°–ü–û–°–û–ë (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)")
        print("="*60)
        
        # –ü–æ–∏—Å–∫ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        listings = client.search_accommodations(
            location="Kiev, Ukraine",
            adults=2,
            checkin="2025-07-01",
            checkout="2025-07-05"
        )
        
        formatter.display_search_results(listings)
        
        print(f"\n{EMOJIS['finish']} –°—Ç–∞—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.stop_server()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–∂–∏–º–∞"""
    print("üè† –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í AIRBNB –ü–û–ò–°–ö –° –ò–ò!")
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
    print("1. ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ò–ò –∞–≥–µ–Ω—Ç–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã)")
    print("2. üí¨ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ (–≤–≤–æ–¥–∏—Ç–µ —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã)")
    print("3. üß† –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∂–∏–ª—å—è (—Å –ò–ò –æ—Ç—á–µ—Ç–∞–º–∏)")
    print("4. üìä –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)")
    print("5. üö™ –í—ã—Ö–æ–¥")
    
    while True:
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ").strip()
        
        if choice == "1":
            demo_ai_search()
            break
        elif choice == "2":
            interactive_search()
            break
        elif choice == "3":
            demo_listing_analysis()
            break
        elif choice == "4":
            old_demo()
            break
        elif choice == "5":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5")


if __name__ == "__main__":
    main()