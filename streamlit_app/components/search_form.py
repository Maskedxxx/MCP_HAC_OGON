# streamlit_app/components/search_form.py
"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
"""

import streamlit as st
from app_config.streamlit_config import EXAMPLE_QUERIES


class SearchForm:
    """–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞"""
        pass
    
    def render(self) -> str:
        """
        –†–µ–Ω–¥–µ—Ä —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
        
        Returns:
            str: –í–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        """
        st.markdown("### üí¨ –û–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞ –æ–±—ã—á–Ω–æ–º —è–∑—ã–∫–µ")
        
        # –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        self._render_examples()
        
        # –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞
        return self._render_search_input()
    
    def _render_examples(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤"""
        with st.expander("üí° –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤", expanded=False):
            for example in EXAMPLE_QUERIES:
                st.markdown(f"- {example}")
    
    def _render_search_input(self) -> str:
        """
        –†–µ–Ω–¥–µ—Ä –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
        
        Returns:
            str: –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
        """
        col1, col2 = st.columns([4, 1])
        
        with col1:
            user_query = st.text_input(
                "–í–∞—à –∑–∞–ø—Ä–æ—Å:", 
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ù—É–∂–Ω–æ –∂–∏–ª—å–µ –≤ –ü–∞—Ä–∏–∂–µ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–ª—è –¥–≤–æ–∏—Ö",
                label_visibility="collapsed"
            )
        
        with col2:
            search_button = st.button("üîç –ù–∞–π—Ç–∏", use_container_width=True, type="primary")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        if search_button and user_query.strip():
            return user_query.strip()
        elif search_button:
            st.warning("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞")
        
        return ""
    
    def display_extracted_params(self, params_dict: dict):
        """
        –ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –ò–ò –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        
        Args:
            params_dict: –°–ª–æ–≤–∞—Ä—å —Å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        """
        if not params_dict:
            return
        
        st.markdown("---")
        st.subheader("üß† –ß—Ç–æ –ø–æ–Ω—è–ª –ò–ò –∏–∑ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –º–µ—Ç—Ä–∏–∫–∞—Ö
        self._render_main_params(params_dict)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        self._render_additional_params(params_dict)
    
    def _render_main_params(self, params_dict: dict):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –º–µ—Ç—Ä–∏–∫–∞—Ö"""
        cols = st.columns(4)
        
        main_params = [
            ("üìç", "–õ–æ–∫–∞—Ü–∏—è", params_dict.get('location', '‚Äî')),
            ("üë•", "–ì–æ—Å—Ç–µ–π", f"{params_dict.get('adults', '‚Äî')} –≤–∑—Ä–æ—Å–ª—ã—Ö"),
            ("üìÖ", "–ó–∞–µ–∑–¥", params_dict.get('checkin', '‚Äî')),
            ("üìÖ", "–í—ã–µ–∑–¥", params_dict.get('checkout', '‚Äî')),
        ]
        
        for i, (emoji, label, value) in enumerate(main_params):
            with cols[i]:
                st.metric(f"{emoji} {label}", value)
    
    def _render_additional_params(self, params_dict: dict):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
        additional_params = []
        
        if params_dict.get('children'):
            additional_params.append(f"üë∂ –î–µ—Ç–∏: {params_dict['children']}")
        if params_dict.get('pets'):
            additional_params.append(f"üêï –ü–∏—Ç–æ–º—Ü—ã: {params_dict['pets']}")
        if params_dict.get('maxPrice'):
            additional_params.append(f"üí∞ –ú–∞–∫—Å. —Ü–µ–Ω–∞: ${params_dict['maxPrice']}")
        if params_dict.get('minPrice'):
            additional_params.append(f"üí∏ –ú–∏–Ω. —Ü–µ–Ω–∞: ${params_dict['minPrice']}")
        
        if additional_params:
            st.info(" | ".join(additional_params))