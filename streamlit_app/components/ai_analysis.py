# streamlit_app/components/ai_analysis.py
"""
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç AI –∞–Ω–∞–ª–∏–∑–∞ –∂–∏–ª—å—è –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å TripAdvisor
"""

import streamlit as st
import pandas as pd
from utils.ui_helpers import UIHelpers
from .tripadvisor_tabs import TripAdvisorTabs


class AIAnalysis:
    """–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è AI –∞–Ω–∞–ª–∏–∑–∞"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞"""
        self.ui_helpers = UIHelpers()
        self.tripadvisor_tabs = TripAdvisorTabs()
    
    def render(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä AI –∞–Ω–∞–ª–∏–∑–∞"""
        if not st.session_state.get('report'):
            return
        
        st.markdown("---")
        st.subheader("ü§ñ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∂–∏–ª—å—è")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        tabs = st.tabs([
            "üè† AI –ê–Ω–∞–ª–∏–∑ –∂–∏–ª—å—è", 
            "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω—ã", 
            "üé≠ –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
            "üí¨ –û—Ç–∑—ã–≤—ã –æ —Ä–∞–π–æ–Ω–µ",
            "üåç –û—Ç—á–µ—Ç –æ –≥–æ—Ä–æ–¥–µ",
            "üó∫Ô∏è –ö–∞—Ä—Ç–∞"
        ])
        
        # –†–µ–Ω–¥–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤–∫–ª–∞–¥–æ–∫
        with tabs[0]:
            self._render_ai_report()
        
        with tabs[1]:
            self.tripadvisor_tabs.render_restaurants_tab()
        
        with tabs[2]:
            self.tripadvisor_tabs.render_attractions_tab()
        
        with tabs[3]:
            self.tripadvisor_tabs.render_reviews_tab()
        
        with tabs[4]:
            self.tripadvisor_tabs.render_city_tab()
        
        with tabs[5]:
            self._render_map_tab()
    
    def _render_ai_report(self):
        """–†–µ–Ω–¥–µ—Ä AI –æ—Ç—á–µ—Ç–∞ –æ –∂–∏–ª—å–µ"""
        st.markdown("### üìã –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ—Ç –ò–ò")
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Markdown
        report_content = st.session_state.report
        self.ui_helpers.render_report_container(report_content, "ai")
    
    def _render_map_tab(self):
        """–†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ —Å –∫–∞—Ä—Ç–æ–π"""
        if not st.session_state.get('current_listing_data'):
            st.info("üìç –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∏–ª—å–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ")
            return
        
        coordinates = st.session_state.current_listing_data["basic"]["coordinates"]
        lat, lon = coordinates["latitude"], coordinates["longitude"]
        listing_name = st.session_state.current_listing_data["basic"]["name"]
        
        st.markdown("### üó∫Ô∏è –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∂–∏–ª—å—è")
        st.markdown(f"**üìç {listing_name}**")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame –¥–ª—è –∫–∞—Ä—Ç—ã
        map_data = pd.DataFrame({
            'lat': [lat],
            'lon': [lon],
            'size': [20]
        })
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
        st.map(map_data, size='size')
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        st.markdown(f"""
        **–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:** {lat:.6f}, {lon:.6f}
        
        üí° *Tip: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π —Ä—è–¥–æ–º —Å —ç—Ç–∏–º –º–µ—Å—Ç–æ–º.*
        """)