# streamlit_app/utils/animations.py
"""
–ê–Ω–∏–º–∞—Ü–∏–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import streamlit as st
import time
from config.streamlit_config import ANIMATION_CONFIG


def show_thinking_animation():
    """–ê–Ω–∏–º–∞—Ü–∏—è 'AI –¥—É–º–∞–µ—Ç' —Å –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä–æ–º"""
    thinking_container = st.empty()
    progress_container = st.empty()
    
    with thinking_container.container():
        st.markdown("""
        <div class="thinking-animation">
            <h3>ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...</h3>
        </div>
        """, unsafe_allow_html=True)
    
    # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä —Å —ç—Ç–∞–ø–∞–º–∏
    stages = ANIMATION_CONFIG["thinking_stages"]
    stage_delay = ANIMATION_CONFIG["stage_delay"]
    
    progress_bar = progress_container.progress(0)
    status_text = progress_container.empty()
    
    for i, stage in enumerate(stages):
        status_text.info(stage)
        progress_bar.progress((i + 1) / len(stages))
        time.sleep(stage_delay)
    
    thinking_container.empty()
    progress_container.empty()


def add_auto_scroll_script():
    """–î–æ–±–∞–≤–ª—è–µ—Ç JavaScript –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º"""
    delay = ANIMATION_CONFIG["auto_scroll_delay"]
    
    st.markdown(f"""
    <script>
    setTimeout(function() {{
        // –ò—â–µ–º —Å–µ–∫—Ü–∏—é —Å –∞–Ω–∞–ª–∏–∑–æ–º (–ø–æ—Å–ª–µ–¥–Ω–∏–π stSubheader)
        const headers = document.querySelectorAll('[data-testid="stSubheader"]');
        if (headers.length > 0) {{
            const analysisHeader = headers[headers.length - 1];
            analysisHeader.scrollIntoView({{behavior: 'smooth', block: 'start'}});
        }}
    }}, {delay});
    </script>
    """, unsafe_allow_html=True)


def show_success_message(message: str, icon: str = "‚úÖ"):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —Å –∏–∫–æ–Ω–∫–æ–π"""
    st.success(f"{icon} {message}")


def show_error_message(message: str, icon: str = "‚ùå"):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å –∏–∫–æ–Ω–∫–æ–π"""
    st.error(f"{icon} {message}")


def show_info_message(message: str, icon: str = "‚ÑπÔ∏è"):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∫–æ–Ω–∫–æ–π"""
    st.info(f"{icon} {message}")